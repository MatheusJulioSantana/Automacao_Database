import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

tabela = pd.read_csv("barcos_ref.csv")
display (tabela)
display(tabela.corr()[["Preco"]])


#criar grafico
sns.heatmap(tabela.corr()[["Preco"]].sort_values(by="Preco", ascending=False), cmap="Blues", annot = True)

#exibir grafico
plt.show()

#Passo 6: Modelagem + Algoritmos (Aqui que entra a Inteligência Artificial, se necessário)
#preparação

# Separar a base de dados em x e y
y = tabela["Preco"]
x = tabela.drop("Preco", axis=1)

# Separando entre dados de treino e teste
from sklearn.model_selection import train_test_split

x_treino, x_teste, y_treino, y_teste = train_test_split(x, y, random_state=1)


#criação e treino de IA

#importar a inteligencia artifical


#criar a inteligencia artificial
modelo_regressaolinear = LinearRegression()
modelo_arvoredecisao = RandomForestRegressor()

#treinar a inteligencia artificial
modelo_regressaolinear.fit(x_treino, y_treino)
modelo_arvoredecisao.fit(x_treino, y_treino)

previsao_regressaolinear = modelo_regressaolinear.predict(x_teste)
previsao_arvoredecisao = modelo_arvoredecisao.predict(x_teste)



print(r2_score(y_teste, previsao_regressaolinear))
print(r2_score(y_teste, previsao_arvoredecisao))
tabela_auxiliar = pd.DataFrame()
tabela_auxiliar["y_teste"] = y_teste
tabela_auxiliar["Previsoes ArvoreDecisao"] = previsao_arvoredecisao
tabela_auxiliar["Previsoes Regressao Linear"] = previsao_regressaolinear

tabela_auxiliar = pd.DataFrame()
tabela_auxiliar["y_teste"] = y_teste
tabela_auxiliar["Previsoes ArvoreDecisao"] = previsao_arvoredecisao
tabela_auxiliar["Previsoes Regressao Linear"] = previsao_regressaolinear

tabela_nova = pd.read_csv("novos_barcos.csv")
display (tabela_nova)
previsao = modelo_arvoredecisao.predict(tabela_nova)
print(previsao)
